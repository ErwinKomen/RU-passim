# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-07-06 11:21
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import sys

def edit_msitem(apps, schema_editor):
    MsItem = apps.get_model('seeker', 'MsItem')
    SermonDescr = apps.get_model('seeker', 'SermonDescr')
    attrs = ['parent', 'firstchild', 'next']
    num = SermonDescr.objects.all().count()
    # Visit all sermon descriptors
    print("Round 1", file=sys.stderr)
    for idx, obj in enumerate(SermonDescr.objects.all()):
        # Is it connected to a manuscript?
        manu = obj.manu
        if manu != None:
            # It is connected: create a corresponding MsItem element
            item = MsItem(manu=manu, order=obj.order)
            item.save()
            # Make sure the SermonDescr points to this MsItem
            obj.msitem = item
            obj.save()

    # Visit all sermon descriptors again
    print("Round 2", file=sys.stderr)
    for idx, obj in enumerate(SermonDescr.objects.all()):
        # Is it connected to a manuscript?
        manu = obj.manu
        if manu != None:
            # Get the corresponding MsItem
            item = obj.msitem
            if item != None:
                # Process the 'parent', 'firstchild' and 'next'
                for rel in attrs:
                    # Get the original S pointer
                    sermon = getattr(obj, rel)
                    if sermon != None:
                        # Find the corresponding MsItem
                        msitem = sermon.msitem
                        if msitem != None:
                            setattr(item, rel, msitem)
            # Only save when we have had all relations
            item.save()
    print("edit_msitem done", file=sys.stderr)


class Migration(migrations.Migration):

    dependencies = [
        ('seeker', '0081_auto_20200702_1236'),
    ]

    operations = [
        migrations.CreateModel(
            name='MsItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=-1, verbose_name='Order')),
                ('firstchild', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sermon_child', to='seeker.MsItem')),
                ('manu', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manuitems', to='seeker.Manuscript')),
                ('next', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sermon_next', to='seeker.MsItem')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sermon_parent', to='seeker.MsItem')),
            ],
        ),
        migrations.CreateModel(
            name='SermonHead',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('locus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Locus')),
                ('msitem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemheads', to='seeker.MsItem')),
            ],
        ),
        migrations.AddField(
            model_name='sermondescr',
            name='msitem',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='itemsermons', to='seeker.MsItem'),
        ),
        migrations.RunPython(edit_msitem)
    ]
