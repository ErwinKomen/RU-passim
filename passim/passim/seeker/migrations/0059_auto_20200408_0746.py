# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2020-04-08 05:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import passim.seeker.models


class Migration(migrations.Migration):

    dependencies = [
        ('seeker', '0058_auto_20200129_1614'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasketGold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gold', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_contents_gold', to='seeker.SermonGold')),
            ],
        ),
        migrations.CreateModel(
            name='BasketMan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_contents_manu', to='seeker.Manuscript')),
            ],
        ),
        migrations.CreateModel(
            name='BasketSuper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionGold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionMan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CollectionSuper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AlterModelOptions(
            name='information',
            options={'verbose_name_plural': 'Information Items'},
        ),
        migrations.AddField(
            model_name='collection',
            name='created',
            field=models.DateTimeField(default=passim.seeker.models.get_current_datetime),
        ),
        migrations.AddField(
            model_name='collection',
            name='path',
            field=models.TextField(default='[]', verbose_name='History path'),
        ),
        migrations.AddField(
            model_name='collection',
            name='scope',
            field=models.CharField(choices=[('priv', 'Private'), ('publ', 'Public'), ('team', 'Team')], default='priv', max_length=5, verbose_name='Scope'),
        ),
        migrations.AddField(
            model_name='collection',
            name='type',
            field=models.CharField(choices=[('gold', 'gold'), ('manu', 'manuscript'), ('sermo', 'sermon'), ('super', 'super')], default=1, max_length=5, verbose_name='Type of collection'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='equalgold',
            name='explicit',
            field=models.TextField(blank=True, null=True, verbose_name='Explicit'),
        ),
        migrations.AddField(
            model_name='equalgold',
            name='incipit',
            field=models.TextField(blank=True, null=True, verbose_name='Incipit'),
        ),
        migrations.AddField(
            model_name='equalgold',
            name='srchexplicit',
            field=models.TextField(blank=True, null=True, verbose_name='Explicit (searchable)'),
        ),
        migrations.AddField(
            model_name='equalgold',
            name='srchincipit',
            field=models.TextField(blank=True, null=True, verbose_name='Incipit (searchable)'),
        ),
        migrations.AddField(
            model_name='profile',
            name='basketsize_gold',
            field=models.IntegerField(default=0, verbose_name='Basket size sermons gold'),
        ),
        migrations.AddField(
            model_name='profile',
            name='basketsize_manu',
            field=models.IntegerField(default=0, verbose_name='Basket size manuscripts'),
        ),
        migrations.AddField(
            model_name='profile',
            name='basketsize_super',
            field=models.IntegerField(default=0, verbose_name='Basket size super sermons gold'),
        ),
        migrations.AddField(
            model_name='profile',
            name='historygold',
            field=models.TextField(default='[]', verbose_name='Sermon Gold history'),
        ),
        migrations.AddField(
            model_name='profile',
            name='historymanu',
            field=models.TextField(default='[]', verbose_name='Manuscript history'),
        ),
        migrations.AddField(
            model_name='profile',
            name='historysermo',
            field=models.TextField(default='[]', verbose_name='Sermon history'),
        ),
        migrations.AddField(
            model_name='profile',
            name='historysuper',
            field=models.TextField(default='[]', verbose_name='Super sermon Gold history'),
        ),
        migrations.AddField(
            model_name='sermondescr',
            name='signatures',
            field=models.ManyToManyField(related_name='signatures_sermon', through='seeker.SermonSignature', to='seeker.Signature'),
        ),
        migrations.AddField(
            model_name='sermonsignature',
            name='gsig',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sermongoldsignatures', to='seeker.Signature'),
        ),
        migrations.AlterField(
            model_name='equalgold',
            name='code',
            field=models.CharField(blank=True, default='ZZZ_DETERMINE', max_length=20, null=True, verbose_name='Passim code'),
        ),
        migrations.AddField(
            model_name='collectionsuper',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='super_col', to='seeker.Collection'),
        ),
        migrations.AddField(
            model_name='collectionsuper',
            name='super',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='super_col', to='seeker.EqualGold'),
        ),
        migrations.AddField(
            model_name='collectionman',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manuscript_col', to='seeker.Collection'),
        ),
        migrations.AddField(
            model_name='collectionman',
            name='manuscript',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manuscript_col', to='seeker.Manuscript'),
        ),
        migrations.AddField(
            model_name='collectiongold',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gold_col', to='seeker.Collection'),
        ),
        migrations.AddField(
            model_name='collectiongold',
            name='gold',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gold_col', to='seeker.SermonGold'),
        ),
        migrations.AddField(
            model_name='basketsuper',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_contents_super', to='seeker.Profile'),
        ),
        migrations.AddField(
            model_name='basketsuper',
            name='super',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_contents_super', to='seeker.EqualGold'),
        ),
        migrations.AddField(
            model_name='basketman',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_contents_manu', to='seeker.Profile'),
        ),
        migrations.AddField(
            model_name='basketgold',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basket_contents_gold', to='seeker.Profile'),
        ),
        migrations.AddField(
            model_name='equalgold',
            name='collections',
            field=models.ManyToManyField(related_name='collections_super', through='seeker.CollectionSuper', to='seeker.Collection'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='collections',
            field=models.ManyToManyField(related_name='collections_manuscript', through='seeker.CollectionMan', to='seeker.Collection'),
        ),
        migrations.AddField(
            model_name='profile',
            name='basketitems_gold',
            field=models.ManyToManyField(related_name='basketitems_user_gold', through='seeker.BasketGold', to='seeker.SermonGold'),
        ),
        migrations.AddField(
            model_name='profile',
            name='basketitems_manu',
            field=models.ManyToManyField(related_name='basketitems_user_manu', through='seeker.BasketMan', to='seeker.Manuscript'),
        ),
        migrations.AddField(
            model_name='profile',
            name='basketitems_super',
            field=models.ManyToManyField(related_name='basketitems_user_super', through='seeker.BasketSuper', to='seeker.EqualGold'),
        ),
        migrations.AddField(
            model_name='sermongold',
            name='collections',
            field=models.ManyToManyField(related_name='collections_gold', through='seeker.CollectionGold', to='seeker.Collection'),
        ),
    ]
