# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-05-01 17:54
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idVilleEtab', models.IntegerField(default=-1, verbose_name='CNRS city id')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idPaysEtab', models.IntegerField(default=-1, verbose_name='CNRS country id')),
                ('name', models.CharField(max_length=100, verbose_name='Name (EN)')),
                ('nameFR', models.CharField(max_length=100, verbose_name='Name (FR)')),
            ],
        ),
        migrations.CreateModel(
            name='FieldChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=50)),
                ('english_name', models.CharField(max_length=100)),
                ('dutch_name', models.CharField(max_length=100)),
                ('abbr', models.CharField(default='-', max_length=20)),
                ('machine_value', models.IntegerField(help_text='The actual numeric value stored in the database. Created automatically.')),
            ],
            options={
                'ordering': ['field', 'machine_value'],
            },
        ),
        migrations.CreateModel(
            name='HelpChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(max_length=200)),
                ('searchable', models.BooleanField(default=False)),
                ('display_name', models.CharField(max_length=50)),
                ('help_url', models.URLField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idLibrEtab', models.IntegerField(default=-1, verbose_name='CNRS library id')),
                ('name', models.CharField(max_length=255, verbose_name='Library')),
                ('libtype', models.CharField(choices=[('br', 'bracketed'), ('pl', 'plain')], max_length=5, verbose_name='Library type')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city_libraries', to='seeker.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_libraries', to='seeker.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Manuscript',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('yearstart', models.IntegerField(verbose_name='Year from')),
                ('yearfinish', models.IntegerField(verbose_name='Year until')),
                ('idno', models.CharField(blank=True, max_length=255, null=True, verbose_name='Identifier')),
                ('filename', models.CharField(blank=True, max_length=255, null=True, verbose_name='Filename')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Web info')),
                ('support', models.CharField(blank=True, max_length=255, null=True, verbose_name='Support')),
                ('extent', models.CharField(blank=True, max_length=255, null=True, verbose_name='Extent')),
                ('format', models.CharField(blank=True, max_length=255, null=True, verbose_name='Format')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_manuscripts', to='seeker.Library')),
            ],
        ),
        migrations.CreateModel(
            name='NewsItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('saved', models.DateTimeField(blank=True, null=True)),
                ('until', models.DateTimeField(blank=True, null=True, verbose_name='Remove at')),
                ('msg', models.TextField(verbose_name='Message')),
                ('status', models.CharField(choices=[('ext', 'Extinct'), ('val', 'Valid')], help_text='Sorry, no help available for view.status', max_length=5, verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Nickname',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_nicknames', to='seeker.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Origin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Original location')),
            ],
        ),
        migrations.CreateModel(
            name='Provenance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Provenance location')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Notes on this provenance')),
            ],
        ),
        migrations.CreateModel(
            name='ProvenanceMan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manuscripts_provenances', to='seeker.Manuscript')),
                ('provenance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manuscripts_provenances', to='seeker.Provenance')),
            ],
        ),
        migrations.CreateModel(
            name='SermonDescr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='Title')),
                ('locus', models.CharField(blank=True, max_length=255, null=True, verbose_name='Locus')),
                ('incipit', models.TextField(blank=True, null=True, verbose_name='Incipit')),
                ('explicit', models.TextField(blank=True, null=True, verbose_name='Explicit')),
                ('quote', models.TextField(blank=True, null=True, verbose_name='Quote')),
                ('clavis', models.CharField(blank=True, max_length=255, null=True, verbose_name='Clavis number')),
                ('gryson', models.CharField(blank=True, max_length=255, null=True, verbose_name='Gryson number')),
                ('feast', models.CharField(blank=True, max_length=255, null=True, verbose_name='Feast')),
                ('edition', models.TextField(blank=True, null=True, verbose_name='Edition')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('additional', models.TextField(blank=True, null=True, verbose_name='Additional')),
                ('bibleref', models.TextField(blank=True, null=True, verbose_name='Bible reference(s)')),
                ('keyword', models.CharField(blank=True, max_length=255, null=True, verbose_name='Keyword')),
                ('order', models.IntegerField(default=-1, verbose_name='Order')),
                ('method', models.CharField(default='(OLD)', max_length=255, verbose_name='Method')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_sermons', to='seeker.Author')),
                ('firstchild', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sermon_child', to='seeker.SermonDescr')),
            ],
        ),
        migrations.CreateModel(
            name='SermonDescrGold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linktype', models.CharField(choices=[('eqs', 'equals'), ('prt', 'part_of'), ('sim', 'similar_to'), ('use', 'uses')], default='eq', max_length=5, verbose_name='Link type')),
            ],
        ),
        migrations.CreateModel(
            name='SermonGold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.CharField(blank=True, max_length=255, null=True, verbose_name='Signature')),
                ('incipit', models.TextField(blank=True, null=True, verbose_name='Incipit')),
                ('explicit', models.TextField(blank=True, null=True, verbose_name='Explicit')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_goldensermons', to='seeker.Author')),
            ],
        ),
        migrations.CreateModel(
            name='SermonGoldSame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linktype', models.CharField(choices=[('eqs', 'equals'), ('prt', 'part_of'), ('sim', 'similar_to'), ('use', 'uses')], default='eqs', max_length=5, verbose_name='Link type')),
                ('dst', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sermongold_dst', to='seeker.SermonGold')),
                ('src', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sermongold_src', to='seeker.SermonGold')),
            ],
        ),
        migrations.CreateModel(
            name='SermonMan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manuscripts_sermons', to='seeker.Manuscript')),
                ('sermon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manuscripts_sermons', to='seeker.SermonDescr')),
            ],
        ),
        migrations.CreateModel(
            name='SourceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=datetime.datetime.now)),
                ('code', models.TextField(blank=True, null=True, verbose_name='Code')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('collector', models.CharField(max_length=255, verbose_name='Collected by')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50, verbose_name='Status of synchronization')),
                ('count', models.TextField(default='{}', verbose_name='Count details')),
                ('type', models.CharField(default='', max_length=255, verbose_name='Type')),
                ('user', models.CharField(default='', max_length=255, verbose_name='User')),
                ('msg', models.TextField(blank=True, null=True, verbose_name='Error message')),
            ],
        ),
        migrations.AddField(
            model_name='sermongold',
            name='relations',
            field=models.ManyToManyField(related_name='related_to', through='seeker.SermonGoldSame', to='seeker.SermonGold'),
        ),
        migrations.AddField(
            model_name='sermondescrgold',
            name='gold',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sermondescr_gold', to='seeker.SermonGold'),
        ),
        migrations.AddField(
            model_name='sermondescrgold',
            name='sermon',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sermondescr_gold', to='seeker.SermonDescr'),
        ),
        migrations.AddField(
            model_name='sermondescr',
            name='goldsermons',
            field=models.ManyToManyField(through='seeker.SermonDescrGold', to='seeker.SermonGold'),
        ),
        migrations.AddField(
            model_name='sermondescr',
            name='next',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sermon_next', to='seeker.SermonDescr'),
        ),
        migrations.AddField(
            model_name='sermondescr',
            name='nickname',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nickname_sermons', to='seeker.Nickname'),
        ),
        migrations.AddField(
            model_name='sermondescr',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sermon_parent', to='seeker.SermonDescr'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='origin',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='origin_manuscripts', to='seeker.Origin'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='provenances',
            field=models.ManyToManyField(through='seeker.ProvenanceMan', to='seeker.Provenance'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='sermons',
            field=models.ManyToManyField(through='seeker.SermonMan', to='seeker.SermonDescr'),
        ),
        migrations.AddField(
            model_name='manuscript',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='seeker.SourceInfo'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='country_cities', to='seeker.Country'),
        ),
    ]
